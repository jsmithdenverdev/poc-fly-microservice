version: "3"

vars:
  API_URL: http://localhost:8080
  FLY_APP_NAME: '{{default "poc-fly-microservice" .FLY_APP_NAME}}'
  DOCKER_IMAGE: poc-fly-microservice

tasks:
  default:
    deps: [dev]

  dev:
    desc: Start the development environment
    cmds:
      - docker-compose up --build

  dev:down:
    desc: Stop and remove development containers
    cmds:
      - docker-compose down

  dev:clean:
    desc: Stop containers and remove volumes
    cmds:
      - docker-compose down -v

  test:
    desc: Run tests
    cmds:
      - go test -v ./...

  health:
    desc: Check service health
    cmds:
      - curl -s {{.API_URL}}/health | jq '.'

  build:
    desc: Build Docker image for specified environment (debug/dev/prod)
    cmds:
      - docker build --target {{.TARGET}} -t {{.DOCKER_IMAGE}}:{{.TARGET}} .
    requires:
      vars: [TARGET]

  lint:
    desc: Run linters
    cmds:
      - go vet ./...
      - |
        if command -v golangci-lint >/dev/null 2>&1; then
          golangci-lint run
        else
          echo "golangci-lint is not installed"
        fi

  deploy:
    desc: Deploy the application to Fly.io
    cmds:
      - DOCKER_TARGET=final flyctl deploy --app {{.FLY_APP_NAME}}
    preconditions:
      - sh: command -v flyctl
        msg: "flyctl is not installed. Please install it first: https://fly.io/docs/hands-on/install-flyctl/"

  build:local:
    desc: Build the local Docker image
    cmds:
      - task build TARGET=local

  build:dev:
    desc: Build the development Docker image
    cmds:
      - task build TARGET=dev

  build:prod:
    desc: Build the production Docker image
    cmds:
      - task build TARGET=prod
